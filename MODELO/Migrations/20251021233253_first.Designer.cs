// <auto-generated />
using System;
using MODELO;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MODELO.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20251021233253_first")]
    partial class first
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GrupoPermiso", b =>
                {
                    b.Property<int>("GruposGrupoId")
                        .HasColumnType("int");

                    b.Property<int>("PermisosPermisoId")
                        .HasColumnType("int");

                    b.HasKey("GruposGrupoId", "PermisosPermisoId");

                    b.HasIndex("PermisosPermisoId");

                    b.ToTable("GrupoPermisos", (string)null);
                });

            modelBuilder.Entity("MODELO.Auditoria.ClienteAuditoria", b =>
                {
                    b.Property<int>("ClienteAuditoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteAuditoriaId"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaMovimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdMovimiento")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoMovimiento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClienteAuditoriaId");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdMovimiento");

                    b.HasIndex("IdUsuario");

                    b.ToTable("ClientesAuditoria");
                });

            modelBuilder.Entity("MODELO.Auditoria.Movimiento", b =>
                {
                    b.Property<int>("MovimientoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovimientoId"));

                    b.Property<string>("NombreMovimiento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MovimientoId");

                    b.ToTable("Movimientos");
                });

            modelBuilder.Entity("MODELO.Auditoria.UsuarioAuditoria", b =>
                {
                    b.Property<int>("UsuarioAuditoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioAuditoriaId"));

                    b.Property<DateTime>("FechaLogin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaLogout")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdMovimiento")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoMovimiento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioAuditoriaId");

                    b.HasIndex("IdMovimiento");

                    b.HasIndex("IdUsuario");

                    b.ToTable("UsuariosAuditoria");
                });

            modelBuilder.Entity("MODELO.Cabaña", b =>
                {
                    b.Property<int>("CabañaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CabañaId"));

                    b.Property<bool>("Activa")
                        .HasColumnType("bit");

                    b.Property<int>("Capacidad")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaFinDesactivacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PrecioPorNoche")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CabañaId");

                    b.ToTable("Cabañas");
                });

            modelBuilder.Entity("MODELO.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteId"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClienteId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("MODELO.Composite.Grupo", b =>
                {
                    b.Property<int>("GrupoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GrupoId"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GrupoId");

                    b.ToTable("Grupos");
                });

            modelBuilder.Entity("MODELO.Composite.Permiso", b =>
                {
                    b.Property<int>("PermisoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PermisoId"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PermisoId");

                    b.ToTable("Permisos");
                });

            modelBuilder.Entity("MODELO.ImagenCabaña", b =>
                {
                    b.Property<int>("ImagenCabañaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImagenCabañaId"));

                    b.Property<int>("CabañaId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Imagen")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("ImagenCabañaId");

                    b.HasIndex("CabañaId");

                    b.ToTable("ImagenesCabaña");
                });

            modelBuilder.Entity("MODELO.MotivoCancelacion", b =>
                {
                    b.Property<int>("MotivoCancelacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MotivoCancelacionId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MotivoCancelacionId");

                    b.ToTable("MotivosCancelacion");
                });

            modelBuilder.Entity("MODELO.Pago", b =>
                {
                    b.Property<int>("PagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PagoId"));

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("datetime2");

                    b.Property<string>("FormaDePago")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdReserva")
                        .HasColumnType("int");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PagoId");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("MODELO.Reserva", b =>
                {
                    b.Property<int>("ReservaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservaId"));

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaEntrada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaSalida")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCabaña")
                        .HasColumnType("int");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ReservaId");

                    b.HasIndex("IdCabaña");

                    b.HasIndex("IdCliente");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("MODELO.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contraseña")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GrupoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre_usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PrimerIngreso")
                        .HasColumnType("bit");

                    b.HasKey("UsuarioId");

                    b.HasIndex("GrupoId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("MotivoCancelacionReserva", b =>
                {
                    b.Property<int>("MotivosCancelacionMotivoCancelacionId")
                        .HasColumnType("int");

                    b.Property<int>("ReservasReservaId")
                        .HasColumnType("int");

                    b.HasKey("MotivosCancelacionMotivoCancelacionId", "ReservasReservaId");

                    b.HasIndex("ReservasReservaId");

                    b.ToTable("ReservaMotivoCancelacion", (string)null);
                });

            modelBuilder.Entity("GrupoPermiso", b =>
                {
                    b.HasOne("MODELO.Composite.Grupo", null)
                        .WithMany()
                        .HasForeignKey("GruposGrupoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MODELO.Composite.Permiso", null)
                        .WithMany()
                        .HasForeignKey("PermisosPermisoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MODELO.Auditoria.ClienteAuditoria", b =>
                {
                    b.HasOne("MODELO.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MODELO.Auditoria.Movimiento", "Movimiento")
                        .WithMany()
                        .HasForeignKey("IdMovimiento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MODELO.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Movimiento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("MODELO.Auditoria.UsuarioAuditoria", b =>
                {
                    b.HasOne("MODELO.Auditoria.Movimiento", "Movimiento")
                        .WithMany()
                        .HasForeignKey("IdMovimiento");

                    b.HasOne("MODELO.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movimiento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("MODELO.ImagenCabaña", b =>
                {
                    b.HasOne("MODELO.Cabaña", "Cabaña")
                        .WithMany("Imagenes")
                        .HasForeignKey("CabañaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cabaña");
                });

            modelBuilder.Entity("MODELO.Reserva", b =>
                {
                    b.HasOne("MODELO.Cabaña", "Cabaña")
                        .WithMany()
                        .HasForeignKey("IdCabaña")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MODELO.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cabaña");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("MODELO.Usuario", b =>
                {
                    b.HasOne("MODELO.Composite.Grupo", "Grupo")
                        .WithMany()
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grupo");
                });

            modelBuilder.Entity("MotivoCancelacionReserva", b =>
                {
                    b.HasOne("MODELO.MotivoCancelacion", null)
                        .WithMany()
                        .HasForeignKey("MotivosCancelacionMotivoCancelacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MODELO.Reserva", null)
                        .WithMany()
                        .HasForeignKey("ReservasReservaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MODELO.Cabaña", b =>
                {
                    b.Navigation("Imagenes");
                });
#pragma warning restore 612, 618
        }
    }
}
